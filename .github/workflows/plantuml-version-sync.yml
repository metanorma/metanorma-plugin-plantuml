name: PlantUML Version Sync

on:
  schedule:
    # Check for new PlantUML releases daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  update-plantuml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Check for PlantUML updates
        id: update
        run: |
          # Run the update task and capture exit code
          if rake update_plantuml; then
            echo "update_made=false" >> $GITHUB_OUTPUT
            echo "No update needed - PlantUML is up to date"
          else
            EXIT_CODE=$?
            if [ $EXIT_CODE -eq 1 ]; then
              echo "update_made=true" >> $GITHUB_OUTPUT
              echo "Update completed successfully"

              # Get version info for PR
              PLANTUML_VERSION=$(ruby -e "load 'lib/metanorma/plugin/plantuml/version.rb'; puts Metanorma::Plugin::Plantuml::PLANTUML_JAR_VERSION")
              GEM_VERSION=$(ruby -e "load 'lib/metanorma/plugin/plantuml/version.rb'; puts Metanorma::Plugin::Plantuml::VERSION")

              echo "plantuml_version=$PLANTUML_VERSION" >> $GITHUB_OUTPUT
              echo "gem_version=$GEM_VERSION" >> $GITHUB_OUTPUT
            else
              echo "❌ Update failed with exit code $EXIT_CODE"
              exit $EXIT_CODE
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.update.outputs.update_made == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update PlantUML to version ${{ steps.update.outputs.plantuml_version }}

            - Updated PLANTUML_JAR_VERSION to ${{ steps.update.outputs.plantuml_version }}
            - Downloaded and verified new PlantUML JAR file
            - Incremented gem version to ${{ steps.update.outputs.gem_version }}

            Generated by automated PlantUML update workflow
          title: "Update PlantUML to version ${{ steps.update.outputs.plantuml_version }}"
          body: |
            This PR updates PlantUML to the latest version **${{ steps.update.outputs.plantuml_version }}**.

            ## Changes Made
            - ✅ Updated `PLANTUML_JAR_VERSION` to `${{ steps.update.outputs.plantuml_version }}`
            - ✅ Downloaded and verified new PlantUML JAR file
            - ✅ Incremented gem version to `${{ steps.update.outputs.gem_version }}`
            - ✅ Validated JAR functionality with version check and diagram generation

            ## Automated Validation
            - [x] Found latest valid PlantUML release (excludes pre-releases and native builds)
            - [x] Confirmed semantic version is newer than current
            - [x] JAR file downloads successfully
            - [x] JAR executes and shows correct version
            - [x] JAR can generate test diagrams

            ---
            *This update was created automatically by the PlantUML version sync workflow using `rake update_plantuml`.*

            To update PlantUML manually, run:
            ```bash
            rake update_plantuml
            ```
          branch: update-plantuml-${{ steps.update.outputs.plantuml_version }}
          base: main
          labels: |
            enhancement
            automated
            plantuml-update
